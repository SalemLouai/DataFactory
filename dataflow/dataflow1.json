{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Avro1",
						"type": "DatasetReference"
					},
					"name": "AvroFileDatasource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "ParseExternalNotificationObject"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				}
			],
			"script": "source(output(\n\t\tSequenceNumber as long,\n\t\tOffset as string,\n\t\tEnqueuedTimeUtc as string,\n\t\tSystemProperties as string,\n\t\tProperties as string,\n\t\tBody as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tlimit: 100,\n\trowUrlColumn: 'FileName',\n\tinferDriftedColumnTypes: true) ~> AvroFileDatasource\nAvroFileDatasource parse(Vin = Body ? (Vin as string),\n\t\t{CommandId } = Body ? (CommandId as string),\n\t\tId = Body ? (Id as string),\n\t\tNotificationType = Body ? (NotificationType as string),\n\t\tMessageType = Body ? (MessageType as string),\n\t\tTimeStamp = Body ? (TimeStamp as date),\n\t\tUserId = Body ? (UserId as string),\n\t\tData = Body ? (Data as string),\n\tformat: 'json',\n\tdocumentForm: 'singleDocument') ~> ParseExternalNotificationObject\nParseExternalNotificationObject derive(Id = Id.Id,\n\t\tCommandId = {CommandId }.CommandId,\n\t\tMessageType = MessageType.MessageType,\n\t\tNotificationType = NotificationType.NotificationType,\n\t\tTimeStamp = TimeStamp.TimeStamp,\n\t\tUserId = UserId.UserId,\n\t\tData = Data.Data,\n\t\tVin = Vin.Vin) ~> DerivedColumn1\nDerivedColumn1 derive(HashedVin = sha2(256, Vin),\n\t\tNotificationTypeAsInt = case(NotificationType =='CommandResponse',1, case(NotificationType == 'Notification', 2, case(NotificationType == 'Alert', 3, case(NotificationType == 'ServiceNotification', 4,case(NotificationType == 'ServiceManagement', 5, 0 ) )) ) )) ~> DerivedColumn2\nDerivedColumn2 sink(input(\n\t\tHashedVehicleId as string,\n\t\tId as string,\n\t\tCommandId as string,\n\t\tNotificationType as integer,\n\t\tMessageType as string,\n\t\tTimeStamp as timestamp,\n\t\tUserId as string,\n\t\tData as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tId,\n\t\tCommandId,\n\t\tNotificationType = NotificationTypeAsInt,\n\t\tMessageType,\n\t\tTimeStamp,\n\t\tUserId,\n\t\tData,\n\t\tHashedVehicleId = HashedVin\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}